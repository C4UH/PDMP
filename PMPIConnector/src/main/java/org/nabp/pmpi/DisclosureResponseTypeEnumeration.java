/*
   Copyright 2013 Collaborative For Universal Health (C4UH), Logicoy Inc.

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
  */

//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.1-558 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2013.02.04 at 02:02:33 PM IST 
//


package org.nabp.pmpi;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for DisclosureResponseTypeEnumeration.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="DisclosureResponseTypeEnumeration">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="complete"/>
 *     &lt;enumeration value="deferred"/>
 *     &lt;enumeration value="disallowed"/>
 *     &lt;enumeration value="error"/>
 *     &lt;enumeration value="pmperror"/>
 *     &lt;enumeration value="refused"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "DisclosureResponseTypeEnumeration")
@XmlEnum
public enum DisclosureResponseTypeEnumeration {


    /**
     * 
     *             The search was processed by the PMP and the disclosure is
     *             enclosed.  
     *             
     *             The PMP system MUST provide a pmpi:EncryptedData element.
     *             The encrypted contents of that element MUST validate against
     *             pmp:RequestResponsePrescriptionReport from the PMIX NIEM
     *             IEPD dated
     * 
     *             The pmpi:PlaintextData element WILL NOT be present.
     *           
     * 
     */
    @XmlEnumValue("complete")
    COMPLETE("complete"),

    /**
     * 
     *             The PMP system received the search request but it cannot process the
     *             request within the time allotted within a synchronous request so the
     *             PMP from which disclosure is sought is deferring its response. 
     *             
     *             The pmpi:EncryptedData element MUST NOT be present.
     * 
     *             When a PMP defers its response it SHOULD provide a value
     *             detailing the deferral reason via pmpi:PlaintextData. 
     *             
     *             Searching PMPs that cannot process deferred responses should
     *             ensure that they cancel the deferred request by configuring
     *             the PMP to autocancel in the Interconnect console or by
     *             implementing autocancel themselves by immediately invoking
     *             the cancel operation when a deferred response type is
     *             received.  If autocancel is implemented in the console the
     *             message provided in the console will be appended to any
     *             message received from the PMP.
     *           
     * 
     */
    @XmlEnumValue("deferred")
    DEFERRED("deferred"),

    /**
     * 
     *             The search was disallowed per one of the business rules
     *             specified within Interconnect.  As such Interconnect
     *             disallowed the search which was not fowarded to the PMP
     *             system from which disclosure was sought.
     * 
     *             The pmpi:EncryptedData element MUST NOT be present.
     *             
     *             The PMP Disclosure ID will not be present in this case.
     * 
     *             Interconnect WILL indicate why diclosure was disallowed via
     *             the pmpi:PlaintextData element.
     *           
     * 
     */
    @XmlEnumValue("disallowed")
    DISALLOWED("disallowed"),

    /**
     * 
     *             The disclosure request was transmitted to the PMP but an error 
     *             occurred that Interconnect determined. Additional information may 
     *             be available in the /pmpi:SearchResponse/pmpi:InterconnectDetail 
     *             element.
     * 
     *             The pmpi:EncryptedData element MUST NOT be present.
     * 
     *             The PMP Disclosure ID will not be present in this case.
     * 
     *             The Interconnect system WILL indicate the nature of error via the
     *             pmpi:ErrorDetail element as best it can.
     *           
     * 
     */
    @XmlEnumValue("error")
    ERROR("error"),

    /**
     * 
     *             The disclosure request was received by the PMP but an error occurred
     *             that the PMP system was able to detect. 
     * 
     *             The pmpi:EncryptedData element MUST NOT be present.
     * 
     *             If possible, the PMP system SHOULD provide their ID for the Disclosure.
     * 
     *             The PMP system SHOULD indicate the nature of error via the
     *             pmpi:PmpErrorDetail element.
     *           
     * 
     */
    @XmlEnumValue("pmperror")
    PMPERROR("pmperror"),

    /**
     * 
     *             The search was processed by the PMP but disclosure is being refused 
     *             for a reason determined at the PMP system from which disclosure 
     *             was sought.  Additional information may be available in the 
     *             pmpi:PmpRefusalDetail element of the pmpi:DisclosureResponse.
     * 
     *             The pmpi:EncryptedData element MUST NOT be present.
     * 
     *             If possible, the PMP system SHOULD provide their ID for the Disclosure.
     * 
     *             The PMP system SHOULD indicate why they refused via the
     *             pmpi:PmpRefusalDetail element.
     *           
     * 
     */
    @XmlEnumValue("refused")
    REFUSED("refused");
    private final String value;

    DisclosureResponseTypeEnumeration(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static DisclosureResponseTypeEnumeration fromValue(String v) {
        for (DisclosureResponseTypeEnumeration c: DisclosureResponseTypeEnumeration.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
